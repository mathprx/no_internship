import torch

Input_training_mean = torch.tensor([[ 6.2920e-03,  2.5423e-02,  7.5036e-03,  5.7179e-03,  7.3652e-03,
          1.1450e-02,  1.7603e-02,  2.9476e-02,  4.2686e-02,  6.1563e-02,
          9.4826e-02,  7.4960e-02,  4.5276e-02,  4.2505e-02,  4.7734e-02,
          4.9507e-02,  5.1708e-02,  4.9802e-02,  4.7910e-02,  4.6435e-02,
          4.4348e-02,  4.0800e-02,  3.5463e-02,  2.7326e-02,  1.7747e-02,
          1.0084e-02,  4.8046e-03,  1.0643e-03, -8.6659e-04, -1.3324e-03],
        [ 5.3815e-05,  5.3114e-06,  2.2564e-06,  1.1448e-05,  1.7374e-04,
          1.5027e-03,  6.9265e-03,  1.9982e-02,  9.6914e-02,  2.5194e-01,
          2.2763e-01,  3.5523e-01,  4.7285e-01,  5.0529e-01,  4.9537e-01,
          4.7758e-01,  4.6056e-01,  4.5537e-01,  4.6436e-01,  4.7920e-01,
          4.9431e-01,  5.1558e-01,  5.5411e-01,  6.1837e-01,  6.9690e-01,
          7.5951e-01,  7.9858e-01,  8.1995e-01,  8.1221e-01,  7.7169e-01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  3.7049e-04,  6.2204e-03,
          2.7805e-02,  8.0392e-02,  1.2896e-01,  1.4598e-01,  1.4998e-01,
          1.5259e-01,  1.5600e-01,  1.5997e-01,  1.6545e-01,  1.6686e-01,
          1.7224e-01,  1.8605e-01,  2.1303e-01,  2.6313e-01,  3.3037e-01,
          3.7134e-01,  3.6710e-01,  3.1183e-01,  2.1665e-01,  1.3730e-01],
        [ 1.6402e-04,  6.4529e-02,  2.6920e-01,  2.8094e-01,  3.6859e-03,
          1.2729e-05,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  1.8479e-05,
          1.6840e-02,  1.5362e-01,  3.3631e-01,  5.3352e-01,  6.6840e-01,
          7.4605e-01,  7.9747e-01,  8.3478e-01,  8.6188e-01,  8.8151e-01,
          8.9604e-01,  9.0696e-01,  9.1568e-01,  9.2322e-01,  9.2960e-01],
        [ 1.0405e-02,  5.8076e-04,  8.5074e-04, -1.3823e-02, -2.8907e-02,
         -2.2050e-02, -1.7836e-02, -2.1805e-02, -2.8433e-02, -3.2000e-02,
         -3.1794e-02, -2.9738e-02, -3.1127e-02, -3.5029e-02, -3.8560e-02,
         -3.9906e-02, -3.9692e-02, -4.2064e-02, -3.7221e-02, -2.9748e-02,
         -2.3327e-02, -1.7334e-02, -1.2988e-02, -9.4869e-03, -7.3080e-03,
         -5.8472e-03, -4.6158e-03, -2.4841e-03, -7.1637e-04, -1.7297e-03],
        [-7.6959e-04,  7.6527e-04, -6.0484e-04, -4.0066e-04,  5.6202e-05,
         -2.5384e-05, -2.0493e-04,  2.7834e-05, -5.2509e-05,  4.5537e-04,
          1.2097e-03,  8.7707e-04,  1.3533e-04, -3.0400e-05,  2.0952e-04,
          3.7545e-04, -7.0850e-07, -6.5648e-04, -9.0492e-04, -3.9364e-04,
          3.4873e-04,  7.1871e-04,  5.0608e-04, -2.0935e-04, -8.0774e-04,
         -8.2790e-04, -5.9476e-04, -6.9505e-04, -2.1191e-03, -3.0026e-03],
        [ 1.0904e-04,  1.0904e-04,  1.0905e-04,  1.0903e-04,  2.9676e-04,
          2.0212e-04, -6.2116e-04, -6.4163e-04, -1.6418e-04,  3.5009e-04,
          3.8067e-04,  4.1375e-04,  6.2318e-04,  7.2466e-04,  1.1041e-03,
          1.4137e-03,  1.6928e-03,  1.0775e-03,  8.0636e-04,  2.5894e-04,
          1.1377e-04, -2.4820e-04, -5.5416e-04, -7.1038e-04, -6.0096e-04,
         -7.9350e-04, -1.7868e-05,  4.3058e-04,  7.0144e-04, -1.2762e-03],
        [ 1.5641e-03,  1.1979e-03,  8.5738e-04,  5.6992e-04,  3.3689e-04,
          1.6890e-04,  4.6074e-05, -3.8468e-05, -9.6599e-05, -1.3044e-04,
         -7.5162e-04, -2.7893e-04, -1.4203e-03, -6.6104e-03,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 1.3544e-03,  1.1119e-03,  8.8613e-04,  6.7480e-04,  5.0405e-04,
          3.6366e-04,  2.5028e-04,  1.5994e-04,  8.5736e-05,  2.2661e-05,
         -1.0861e-03, -2.9610e-06, -1.7767e-03, -7.2116e-03,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [-3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04,
         -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04,
         -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04,
         -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04,
         -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04,
         -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04, -3.5587e-04],
        [ 2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,
          2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,
          2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,
          2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,
          2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,
          2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01,  2.4190e-01],
        [ 7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,
          7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,
          7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,
          7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,
          7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,
          7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02,  7.7329e-02],
        [ 2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,
          2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,
          2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,
          2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,
          2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,
          2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02,  2.3536e-02],
        [-3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03,
         -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03,
         -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03,
         -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03,
         -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03,
         -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03, -3.0365e-03],
        [ 2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,
          2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,
          2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,
          2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,
          2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,
          2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03,  2.0225e-03],
        [-3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05,
         -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05,
         -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05,
         -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05,
         -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05,
         -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05, -3.2675e-05],
        [ 3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,
          3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,
          3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,
          3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,
          3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,
          3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04,  3.6889e-04],
        [ 6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,
          6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,
          6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,
          6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,
          6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,
          6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04,  6.1589e-04],
        [ 1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,
          1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,
          1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,
          1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,
          1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,
          1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03,  1.5310e-03],
        [ 1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,
          1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,
          1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,
          1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,
          1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,
          1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03,  1.6923e-03],
        [-2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03,
         -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03,
         -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03,
         -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03,
         -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03,
         -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03, -2.4088e-03],
        [ 3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,
          3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,
          3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,
          3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,
          3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,
          3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02,  3.5251e-02],
        [ 2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,
          2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,
          2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,
          2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,
          2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,
          2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01,  2.9303e-01],
        [ 6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,
          6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,
          6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,
          6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,
          6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,
          6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01,  6.7130e-01],
        [-9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01,
         -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01,
         -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01,
         -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01,
         -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01,
         -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01, -9.6835e-01],
        [-1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02,
         -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02,
         -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02,
         -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02,
         -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02,
         -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02, -1.7478e-02]])

Target_training_mean = torch.tensor([-7.0937e-02, -2.6128e-01, -5.7770e-02, -9.1471e-03, -3.0961e-03,
        -1.6061e-03,  1.2529e-02,  4.6861e-02,  1.9335e-01,  8.4431e-02,
        -3.4832e-02, -2.1698e-01, -2.2084e-01, -1.3343e-01, -6.5608e-02,
        -1.8558e-02,  2.9208e-03,  1.3805e-02,  1.4222e-02,  1.1782e-02,
         2.6305e-03, -1.4081e-02, -4.4017e-02, -8.8589e-02, -7.5941e-02,
         4.3914e-03,  1.0171e-01,  1.7877e-01,  5.1939e-02, -4.6415e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  3.1170e-06,  4.9586e-05,  2.8922e-04, -1.6226e-03,
        -4.9256e-02, -1.6078e-01, -2.1362e-01, -2.1239e-01, -1.9651e-01,
        -1.8709e-01, -1.7323e-01, -1.5786e-01, -1.3569e-01, -1.1049e-01,
        -8.8038e-02, -6.4596e-02, -2.5462e-02,  3.0125e-02,  4.7474e-02,
         2.8150e-03, -1.1279e-01, -3.6564e-01, -5.0223e-01, -3.9568e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -1.4309e-10,  3.1905e-07, -7.4552e-04, -1.1168e-02,
        -2.1033e-02, -3.7161e-02, -4.0160e-02, -3.6437e-02, -2.6406e-02,
        -8.4069e-03, -6.1962e-05, -2.0447e-03,  2.4536e-03,  1.1174e-03,
         7.4539e-04,  2.2775e-03,  6.5628e-03,  1.6874e-02,  2.9243e-02,
         4.0622e-02,  5.6852e-02,  8.1193e-02,  6.6195e-02, -8.3659e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.3942e-02,  8.5878e-03,  3.9410e-02,  5.7892e-02,
         4.6421e-03, -5.7941e-02, -9.4954e-02, -7.3180e-02, -4.2822e-02,
        -3.9369e-03,  2.1034e-02,  6.3945e-03, -1.0579e-03, -7.0759e-03,
        -8.7578e-03, -2.4814e-02, -5.7860e-02, -1.1526e-01, -1.3512e-01,
        -2.9171e-02,  1.1900e-01,  1.0543e-01,  5.2829e-03,  1.0067e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  3.5103e-02,  4.2613e-03, -5.6591e-03, -8.4302e-04,
         8.2422e-03,  9.5410e-03,  7.7844e-03,  5.9210e-03, -6.3582e-03,
        -2.5770e-03,  8.5453e-03,  4.0355e-03, -4.9509e-03, -3.6443e-03,
         8.4122e-04,  3.9685e-03,  8.2107e-03,  1.3293e-02,  1.4606e-02,
        -2.3807e-03, -4.9001e-02, -6.8690e-02,  1.7454e-02,  9.9317e-02,
         6.5163e-01,  4.7440e+00,  5.0950e-01,  4.2391e-01,  5.9943e-01,
         5.8974e-01,  7.1212e-01,  5.7666e-01])

Input_validation_mean = torch.tensor([[ 6.0499e-03,  2.3865e-02,  5.7883e-03,  6.7341e-03,  6.6475e-03,
          1.0486e-02,  1.7536e-02,  2.9936e-02,  4.3894e-02,  6.0086e-02,
          9.2754e-02,  7.3137e-02,  4.1668e-02,  3.9111e-02,  4.5271e-02,
          4.8166e-02,  5.0729e-02,  4.8989e-02,  4.7261e-02,  4.6097e-02,
          4.4353e-02,  4.0887e-02,  3.5593e-02,  2.7480e-02,  1.7718e-02,
          9.4931e-03,  3.9255e-03,  8.2210e-05, -1.8892e-03, -2.3779e-03],
        [ 7.3140e-05,  9.6392e-06,  2.6597e-06,  8.8923e-06,  1.4578e-04,
          1.6235e-03,  7.5956e-03,  2.1031e-02,  9.6364e-02,  2.6801e-01,
          2.3413e-01,  3.5695e-01,  4.7670e-01,  5.1114e-01,  4.9954e-01,
          4.7909e-01,  4.6230e-01,  4.5898e-01,  4.6821e-01,  4.8122e-01,
          4.9399e-01,  5.1594e-01,  5.5539e-01,  6.1801e-01,  6.9041e-01,
          7.4706e-01,  7.8049e-01,  7.9893e-01,  7.9339e-01,  7.5948e-01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  1.4886e-04,  4.8816e-03,
          2.8757e-02,  8.2123e-02,  1.2954e-01,  1.4715e-01,  1.5036e-01,
          1.5274e-01,  1.5566e-01,  1.5963e-01,  1.6376e-01,  1.6410e-01,
          1.6986e-01,  1.8415e-01,  2.1200e-01,  2.6396e-01,  3.3154e-01,
          3.7414e-01,  3.7052e-01,  3.1645e-01,  2.2289e-01,  1.4399e-01],
        [ 1.7063e-04,  5.8571e-02,  2.6086e-01,  2.7329e-01,  6.3198e-04,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  2.2322e-08,
          1.5190e-02,  1.5238e-01,  3.3264e-01,  5.2872e-01,  6.6922e-01,
          7.4782e-01,  7.9802e-01,  8.3309e-01,  8.5913e-01,  8.7832e-01,
          8.9262e-01,  9.0308e-01,  9.1101e-01,  9.1760e-01,  9.2384e-01],
        [ 9.8392e-03,  3.0463e-03, -2.2766e-03, -2.4324e-02, -3.2308e-02,
         -2.3186e-02, -2.1051e-02, -2.4404e-02, -2.9446e-02, -3.3811e-02,
         -3.2332e-02, -2.9603e-02, -3.0730e-02, -3.4539e-02, -3.7985e-02,
         -3.9412e-02, -3.9474e-02, -4.2769e-02, -3.8207e-02, -3.0321e-02,
         -2.3567e-02, -1.7796e-02, -1.3829e-02, -1.0468e-02, -8.1943e-03,
         -6.4661e-03, -5.1027e-03, -3.1139e-03, -1.7711e-03, -2.7137e-03],
        [-3.2383e-04,  6.5791e-04, -5.1901e-04, -1.9009e-06, -8.3695e-05,
          1.3199e-05, -1.3436e-04, -3.6940e-05,  9.8763e-04,  8.4893e-04,
          4.9262e-04,  5.0468e-04,  7.9392e-04,  8.4802e-04,  7.6002e-04,
          1.1616e-04, -5.2271e-04, -7.8945e-04, -6.6416e-04, -1.1042e-04,
          7.8687e-04,  1.4917e-03,  1.5142e-03,  8.8487e-04,  2.6804e-04,
          1.1111e-04,  1.3954e-04, -1.6814e-04, -1.5473e-03, -2.2509e-03],
        [-1.2525e-03, -1.2525e-03, -1.2525e-03, -1.2525e-03, -9.6779e-04,
         -1.1295e-03, -7.0661e-04, -1.5907e-04, -1.4971e-05,  3.2449e-04,
         -1.3791e-04, -4.9157e-04, -9.4731e-05,  3.4538e-04,  5.6184e-04,
          4.9237e-04,  4.1319e-04, -6.5667e-05, -1.7725e-04, -9.9151e-04,
         -1.2752e-03, -1.6860e-03, -1.9361e-03, -1.9404e-03, -1.4175e-03,
         -1.2718e-03, -4.4202e-04,  5.9393e-05,  2.4983e-04, -1.5423e-03],
        [ 1.5647e-03,  1.2005e-03,  8.5937e-04,  5.6607e-04,  3.3711e-04,
          1.6753e-04,  4.6427e-05, -3.8643e-05, -9.6918e-05, -1.3081e-04,
         -7.6074e-04, -2.7265e-04, -1.2661e-03, -6.8039e-03,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 1.3556e-03,  1.1142e-03,  8.8436e-04,  6.7715e-04,  5.0245e-04,
          3.6369e-04,  2.5160e-04,  1.6051e-04,  8.5489e-05,  2.2657e-05,
         -1.0640e-03,  2.9550e-07, -1.3874e-03, -6.9284e-03,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [-4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04,
         -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04,
         -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04,
         -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04,
         -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04,
         -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04, -4.9243e-04],
        [ 2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,
          2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,
          2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,
          2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,
          2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,
          2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01,  2.4217e-01],
        [ 7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,
          7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,
          7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,
          7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,
          7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,
          7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02,  7.6446e-02],
        [ 2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,
          2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,
          2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,
          2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,
          2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,
          2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02,  2.3659e-02],
        [-2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03,
         -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03,
         -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03,
         -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03,
         -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03,
         -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03, -2.9283e-03],
        [ 1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,
          1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,
          1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,
          1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,
          1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,
          1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03,  1.8886e-03],
        [-5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05,
         -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05,
         -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05,
         -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05,
         -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05,
         -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05, -5.6457e-05],
        [-7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04,
         -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04,
         -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04,
         -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04,
         -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04,
         -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04, -7.4832e-04],
        [-2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04,
         -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04,
         -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04,
         -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04,
         -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04,
         -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04, -2.8890e-04],
        [ 6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,
          6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,
          6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,
          6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,
          6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,
          6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05,  6.9170e-05],
        [ 6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,
          6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,
          6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,
          6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,
          6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,
          6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04,  6.0134e-04],
        [-3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03,
         -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03,
         -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03,
         -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03,
         -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03,
         -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03, -3.0870e-03],
        [ 3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,
          3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,
          3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,
          3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,
          3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,
          3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02,  3.5037e-02],
        [ 2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,
          2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,
          2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,
          2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,
          2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,
          2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01,  2.9315e-01],
        [ 6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,
          6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,
          6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,
          6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,
          6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,
          6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01,  6.7182e-01],
        [-8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01,
         -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01,
         -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01,
         -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01,
         -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01,
         -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01, -8.8167e-01],
        [-1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02,
         -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02,
         -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02,
         -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02,
         -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02,
         -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02, -1.8274e-02]])
Target_validation_mean = torch.tensor([-7.9262e-02, -2.4569e-01, -5.2552e-02, -9.9611e-03,  2.6345e-03,
         6.3985e-04,  1.1409e-02,  4.6121e-02,  1.9591e-01,  7.0936e-02,
        -2.2577e-02, -2.2321e-01, -2.2047e-01, -1.2443e-01, -6.1844e-02,
        -1.6694e-02,  3.1574e-03,  1.5196e-02,  1.6825e-02,  1.4317e-02,
         3.8478e-03, -1.3293e-02, -4.4138e-02, -8.7724e-02, -8.0372e-02,
        -6.8762e-03,  9.0349e-02,  1.6840e-01,  4.7623e-02, -4.5122e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -5.0124e-07, -3.3250e-05,  2.7133e-05, -2.9479e-04,
        -3.9670e-02, -1.4937e-01, -2.0613e-01, -2.0518e-01, -1.8907e-01,
        -1.8145e-01, -1.6936e-01, -1.5639e-01, -1.3758e-01, -1.1519e-01,
        -9.1407e-02, -6.6913e-02, -2.9697e-02,  2.3124e-02,  4.0974e-02,
        -2.3060e-03, -1.1248e-01, -3.5926e-01, -4.9645e-01, -3.8078e-01,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00, -3.6104e-12, -1.1282e-06,  1.0791e-03, -1.6704e-03,
        -1.7855e-02, -3.9806e-02, -4.4219e-02, -3.9459e-02, -2.9138e-02,
        -7.1521e-03,  2.0950e-03,  3.0454e-04,  5.5233e-03,  1.0510e-03,
        -2.3611e-04,  3.2790e-03,  6.8552e-03,  1.8481e-02,  3.2883e-02,
         4.2316e-02,  5.5751e-02,  7.8686e-02,  5.8427e-02, -9.0778e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  1.7531e-02,  1.1163e-02,  3.3932e-02,  4.7713e-02,
        -3.3280e-03, -5.6218e-02, -9.7688e-02, -7.8442e-02, -4.8783e-02,
        -6.8645e-03,  1.2676e-02,  1.6680e-02,  1.3112e-03, -1.3174e-02,
        -2.6314e-02, -2.8032e-02, -4.5151e-02, -1.0451e-01, -1.1622e-01,
        -2.9643e-02,  1.0078e-01,  1.0900e-01,  2.6811e-02,  9.4871e-02,
         0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
         0.0000e+00,  3.4561e-01,  4.6999e-03, -2.5276e-03,  1.6549e-03,
         2.1468e-02,  1.5792e-02,  3.4742e-02,  3.6277e-02,  3.3829e-03,
         7.9819e-03,  1.6041e-02,  1.2622e-04,  6.8907e-03, -4.3857e-03,
        -6.8423e-04,  4.7641e-03,  1.0216e-02,  9.3466e-03, -2.3923e-03,
        -1.8139e-02, -5.6935e-02, -5.9902e-02,  3.5490e-02,  9.1017e-02,
         6.4715e-01,  4.8580e+00,  4.9732e-01,  4.2694e-01,  5.9192e-01,
         5.8158e-01,  7.1471e-01,  5.8535e-01])

# input_error_t = Input_training_mean - Input_validation_mean / Input_training_mean
# input_error_v = Input_validation_mean - Input_training_mean / Input_validation_mean
# print('Input errors : ',input_error_t, ";" ,input_error_v)

# target_error_t = Target_training_mean - Target_validation_mean / Target_training_mean
# target_error_v = Target_validation_mean - Target_training_mean / Target_validation_mean
# print('Target errors : ',target_error_t, ";" ,target_error_v)

import matplotlib.pyplot as plt
import random

input_variables_list = ['state_t',
                          'state_rh',
                          'state_qn',
                          'liq_partition',
                          'state_u',
                          'state_v',
                          'pbuf_ozone', # outside of the upper troposphere lower stratosphere (UTLS, corresponding to indices 5-21), variance in minimal for these last 3 
                          'pbuf_CH4',
                          'pbuf_N2O',
                          'state_ps',
                          'pbuf_SOLIN',
                          'pbuf_LHFLX',
                          'pbuf_SHFLX',
                          'pbuf_TAUX',
                          'pbuf_TAUY',
                          'pbuf_COSZRS',
                          'cam_in_ALDIF',
                          'cam_in_ALDIR',
                          'cam_in_ASDIF',
                          'cam_in_ASDIR',
                          'cam_in_LWUP',
                          'cam_in_ICEFRAC',
                          'cam_in_LANDFRAC',
                          'cam_in_OCNFRAC',
                          'cam_in_SNOWHICE',
                          'cam_in_SNOWHLAND']


# for i in range(len(Input_training_mean)):
#     plt.figure(figsize=(10, 5))
#     plt.plot(range(30), Input_training_mean[i])
#     plt.plot(range(30),Input_validation_mean[i], linestyle='--')
#     plt.title(input_variables_list[i])
#     plt.savefig('profiles/'+input_variables_list[i]+'.png')
#     plt.close()

from omegaconf import OmegaConf 
cfg = OmegaConf.load('FNO/config.yaml')

from get_data import get_data
data, train_loader, val_loader = get_data(cfg)
cnt = 0
for inputs, target in train_loader:
    if cnt > 1:
        break
    cnt += 1
    train_std = inputs.std(dim=0)

    target_profile = target[:,:data.target_profile_num * 30]
    target_profile = target_profile.reshape(target_profile.shape[0], data.target_profile_num, 30) 
    target_scalar = target[:,data.target_profile_num * 30:]
    target_scalar = target_scalar[:,:, None].repeat(1,1, 30)
    print('target_profile shape : ', target_profile.shape)
    print('target_scalar shape : ', target_scalar.shape)
    target = torch.cat([target_profile, target_scalar], dim=1)
    train_target_std = target.std(dim=0)
    train_target_mean = target.mean(dim=0)

cnt = 0
for inputs, target in val_loader:
    if cnt == 1:
        break
    cnt = 1
    val_input_std = inputs.std(dim=0)

    target_profile = target[:,:data.target_profile_num * 30]
    target_profile = target_profile.reshape(target_profile.shape[0], data.target_profile_num, 30) 
    target_scalar = target[:,data.target_profile_num * 30:]
    target_scalar = target_scalar[:,:, None].repeat(1,1, 30)
    print('target_profile shape : ', target_profile.shape)
    print('target_scalar shape : ', target_scalar.shape)
    target = torch.cat([target_profile, target_scalar], dim=1)
    val_target_std = target.std(dim=0)
    val_target_mean = target.mean(dim=0)

output_variables_list = data.v2_rh_mc_outputs
print('Training target std : ', train_target_std)
print('Validation validataion std : ', val_target_std)
print('difference : ', train_target_std - val_target_std)

print('Training target mean : ', train_target_mean)
print('Validation target mean : ', val_target_mean)
print('difference : ', train_target_mean - val_target_mean)



for i in range(len(train_target_std)):
    variable = output_variables_list[i]
    plt.figure(figsize=(10, 5))
    plt.plot(range(30), train_target_std[i], label='Training std')
    plt.plot(range(30), val_target_std[i], linestyle='--', label='Validation std')
    plt.title(variable)
    plt.savefig('profiles/output_'+variable+'_std.png')
    plt.close()
    plt.figure(figsize=(10, 5))
    plt.plot(range(30), train_target_mean[i], label='Training mean')
    plt.plot(range(30), val_target_mean[i], linestyle='--', label='Validation mean')
    plt.title(variable)
    plt.savefig('profiles/output_'+variable+'_mean.png')

# print('Training std : ', train_std)
# print('Validation std : ', val_std)

# for i in range(len(train_std)):
#     variable = input_variables_list[i]
#     plt.figure(figsize=(10, 5))
#     plt.plot(range(30), train_std[i], label='Training std')
#     plt.plot(range(30), val_std[i], linestyle='--', label='Validation std')
#     plt.savefig('profiles/'+variable+'_std.png')
#     plt.close()
    

# print('difference : ', train_std - val_std)